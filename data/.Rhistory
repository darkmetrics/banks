# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
path <- readline(prompt='Enter path to the directory to save the defaults data in it:')
setwd(toString(path))
?setwd
pwd
pwd()
getwd()
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
path <- readline(prompt='Enter path to to save the defaults data:')
path <- strsplit(path, split="\\/|\\//|\\\|\\\\")
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
path <- readline(prompt='Enter path to to save the defaults data:')
path <- strsplit(path, split="\\\\")
print(path)
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
path <- readline(prompt='Enter path to to save the defaults data:')
path <- file.path(strsplit(path, split="\\\\"))
print(path)
path <- normalizePath(path)
path
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
path <- readline(prompt='Enter path to to save the defaults data:')
path <- file.path(strsplit(path, split="\\\\")
path <- file.path(strsplit(path, split="\\\\"))
path
strsplit('D:\Users\Vladimir\Desktop\Github\banks\data', '////')
strsplit('D:\Users\Vladimir\Desktop\Github\banks\data', '///')
gsub('\', '//', 'D:\Users\Vladimir\Desktop\Github\banks\data')
gsub('\', '/', 'D:\Users\Vladimir\Desktop\Github\banks\data')
gsub("\", "/", "D:\Users\Vladimir\Desktop\Github\banks\data"")
gsub("\", "/", "D:\Users\Vladimir\Desktop\Github\banks\data")
gsub("\\\\", "/", "D:\Users\Vladimir\Desktop\Github\banks\data")
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path:\\n\\n")
oldstring <- readline()
chartr("\\\\", "/", oldstring)
}
pathPrep()
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path:\\n\\n")
oldstring <- readline()
chartr("\\", "/", oldstring)
}
pathPrep()
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path:\\n\\n")
oldstring <- readline()
path <- chartr("\\", "/", oldstring)
return(path)
}
path <- pathPrep()
print(path)
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path: (Example: C:/Users/User/)")
oldstring <- readline()
path <- chartr("\\", "/", oldstring)
return(path)
}
path <- pathPrep()
print(path)
setwd(path)
getwd()
library(data.table)
library(xml2)
library(stringr)
library(xlsx)
######################################
# Read and set path where to save data
######################################
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path: (Example: C:/Users/User/)")
oldstring <- readline()
path <- chartr("\\", "/", oldstring)
return(path)
}
path <- pathPrep()
##########
# parser #
##########
GetNumberOfPages <- function(URL){
OnePageHTML <- read_html("https://www.banki.ru/banks/memory/?PAGEN_1=1")
Header <- xml_find_all(OnePageHTML, ".//div[@class = 'margin-bottom-default']")[[1]]
NumbersAttribute <- xml_attr(Header, "data-options")
NumbersAttributeSplit <- str_split(NumbersAttribute, "\n")[[1]]
ItemsPerPage <- NumbersAttributeSplit[str_detect(NumbersAttributeSplit, "itemsPerPage")]
ItemsPerPage <- as.numeric(str_extract(ItemsPerPage, "\\d+"))
TotalItems <- NumbersAttributeSplit[str_detect(NumbersAttributeSplit, "totalItems")]
TotalItems <- as.numeric(str_extract(TotalItems, "\\d+"))
NumberOfPages <- round(TotalItems/ItemsPerPage)
return(NumberOfPages)
}
OnePageProcessing <- function(URL){
OnePageHTML <- read_html(URL)
OnePageItems <- xml_find_all(OnePageHTML, ".//tr[@data-test = 'memory-book-item']")
OnePageOneItem <- OneItemProcessing(OnePageItems[[1]])
OnePageItemsText <- lapply(OnePageItems, OneItemProcessing)
OnePageItemsText <- do.call(rbind, OnePageItemsText)
OnePageItemsText <- as.data.table(OnePageItemsText)
colnames(OnePageItemsText) <- c("BankDefaultIndex", "Name", "regnum", "DefaultType", "DefaultDate", "BankLocalization")
return(OnePageItemsText)
}
OneItemProcessing <- function(Item){
OnePageOneItemText <- xml_text(Item)
OnePageOneItemText <- str_split(OnePageOneItemText, "\n")[[1]]
OnePageOneItemText <- lapply(OnePageOneItemText, str_remove, "\\s+")
OnePageOneItemText <- unlist(OnePageOneItemText)
OnePageOneItemText <- OnePageOneItemText[OnePageOneItemText != ""]
return(OnePageOneItemText)
}
AllPagesProcessing <- function(SavingRequired = F, SavingPath = NULL){
AllPagesItems <- list()
for (i in 1:GetNumberOfPages("https://www.banki.ru/banks/memory/?PAGEN_1=1")){
OnePageURL <- paste("https://www.banki.ru/banks/memory/?PAGEN_1=", as.character(i), sep = "")
AllPagesItems[[i]] <- OnePageProcessing(OnePageURL)
if (i %% 10 == 0){
print(paste("Processed page #", as.character(i), sep = ""))
}
}
AllPagesItems <- do.call(rbind, AllPagesItems)
AllPagesItems[BankDefaultIndex == BankLocalization, "BankLocalization" := "Unknown"]
if (SavingRequired == T){
write.xlsx(AllPagesItems, SavingPath)
}
return(AllPagesItems)
}
AllPages <- AllPagesProcessing(SavingRequired = T,
SavingPath = "BankDefaults.xlsx")
library(data.table)
library(xml2)
library(stringr)
library(xlsx)
install.packages('xlsx')
install.packages('xlsx', lib = 'C:/Program Files/R/R-4.1.1/library')
library(data.table)
library(xml2)
library(stringr)
library(xlsx)
Sys.setenv(JAVA_HOME="")
library(xlsx)
# setwd("C:/Users/Fride/OneDrive/Документы/GitHub/Coursework")
pathPrep <- function() {
cat("Please enter the path: (Example: C:/Users/User/)")
oldstring <- readline()
path <- chartr("\\", "/", oldstring)
return(path)
}
path <- pathPrep()
setwd(path)
##########
# parser #
##########
GetNumberOfPages <- function(URL){
OnePageHTML <- read_html("https://www.banki.ru/banks/memory/?PAGEN_1=1")
Header <- xml_find_all(OnePageHTML, ".//div[@class = 'margin-bottom-default']")[[1]]
NumbersAttribute <- xml_attr(Header, "data-options")
NumbersAttributeSplit <- str_split(NumbersAttribute, "\n")[[1]]
ItemsPerPage <- NumbersAttributeSplit[str_detect(NumbersAttributeSplit, "itemsPerPage")]
ItemsPerPage <- as.numeric(str_extract(ItemsPerPage, "\\d+"))
TotalItems <- NumbersAttributeSplit[str_detect(NumbersAttributeSplit, "totalItems")]
TotalItems <- as.numeric(str_extract(TotalItems, "\\d+"))
NumberOfPages <- round(TotalItems/ItemsPerPage)
return(NumberOfPages)
}
OnePageProcessing <- function(URL){
OnePageHTML <- read_html(URL)
OnePageItems <- xml_find_all(OnePageHTML, ".//tr[@data-test = 'memory-book-item']")
OnePageOneItem <- OneItemProcessing(OnePageItems[[1]])
OnePageItemsText <- lapply(OnePageItems, OneItemProcessing)
OnePageItemsText <- do.call(rbind, OnePageItemsText)
OnePageItemsText <- as.data.table(OnePageItemsText)
colnames(OnePageItemsText) <- c("BankDefaultIndex", "Name", "regnum", "DefaultType", "DefaultDate", "BankLocalization")
return(OnePageItemsText)
}
OneItemProcessing <- function(Item){
OnePageOneItemText <- xml_text(Item)
OnePageOneItemText <- str_split(OnePageOneItemText, "\n")[[1]]
OnePageOneItemText <- lapply(OnePageOneItemText, str_remove, "\\s+")
OnePageOneItemText <- unlist(OnePageOneItemText)
OnePageOneItemText <- OnePageOneItemText[OnePageOneItemText != ""]
return(OnePageOneItemText)
}
AllPagesProcessing <- function(SavingRequired = F, SavingPath = NULL){
AllPagesItems <- list()
for (i in 1:GetNumberOfPages("https://www.banki.ru/banks/memory/?PAGEN_1=1")){
OnePageURL <- paste("https://www.banki.ru/banks/memory/?PAGEN_1=", as.character(i), sep = "")
AllPagesItems[[i]] <- OnePageProcessing(OnePageURL)
if (i %% 10 == 0){
print(paste("Processed page #", as.character(i), sep = ""))
}
}
AllPagesItems <- do.call(rbind, AllPagesItems)
AllPagesItems[BankDefaultIndex == BankLocalization, "BankLocalization" := "Unknown"]
if (SavingRequired == T){
write.xlsx(AllPagesItems, SavingPath)
}
return(AllPagesItems)
}
AllPages <- AllPagesProcessing(SavingRequired = T,
SavingPath = "BankDefaults.xlsx")
